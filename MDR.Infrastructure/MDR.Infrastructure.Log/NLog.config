<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd" autoReload="true" throwExceptions="false" internalLogLevel="Off" internalLogFile="/tmp/nlog-internal.log">
    <!--
        autoReload 修改配置文件后是否允许自动加载无须重启程序
        throwExceptions 内部日志系统抛出异常
        internalLogLevel 可选Trace|Debug|Info|Warn|Error|Fatal决定内部日志的级别 Off 关闭
        internalLogFile 把内部的调试和异常信息都写入指定文件里
        -->
    <targets>
        <!--此部分中的所有目标将自动异步-->
        <target name="AsyncSystemTarget" xsi:type="AsyncWrapper">
            <target name="SystemTarget" xsi:type="File" fileName="${basedir}/Logs/${shortdate}/system.txt" layout="${longdate} | ${uppercase:${level}} | ${threadname}[${threadid}] | ${logger} | ${message} ${newline}" archiveFileName="${basedir}/Logs/${shortdate}/system.{#}.txt" maxArchiveFiles="7" archiveAboveSize="52428800" archiveNumbering="Sequence" archiveOldFileOnStartup="false" archiveOldFileOnStartupAboveSize="0" lineEnding="CRLF" keepFileOpen="true" concurrentWrites="false" openFileCacheTimeout="30"/>
        </target>
        <target name="AsyncTraceTarget" xsi:type="AsyncWrapper">
            <!--项目日志保存文件路径说明fileName="${basedir}/保存目录，以年月日的格式创建/${shortdate}/${记录器名称}-${单级记录}-${shortdate}.txt"-->
            <target name="TraceTarget" xsi:type="File" fileName="${basedir}/Logs/${shortdate}/${lowercase:${level}}.txt" layout="${longdate} | ${uppercase:${level}} | ${threadname}[${threadid}] | ${logger} | ${message} ${newline}" archiveFileName="${basedir}/Logs/${shortdate}/${lowercase:${level}}.{##}.txt" maxArchiveFiles="20" archiveAboveSize="52428800" archiveNumbering="Sequence" archiveOldFileOnStartup="false" archiveOldFileOnStartupAboveSize="0" lineEnding="CRLF" keepFileOpen="true" concurrentWrites="false" openFileCacheTimeout="30"/>
        </target>
        <target name="WebApiTarget" xsi:type="File" fileName="${basedir}/Logs/${shortdate}/web/api.txt" layout="${longdate} | ${uppercase:${level}} | ${threadname}[${threadid}] | ${logger} | ${message} ${newline}" archiveFileName="${basedir}/Logs/${shortdate}/web/api.{#}.txt" archiveAboveSize="52428800" archiveNumbering="Sequence" archiveOldFileOnStartup="false" archiveOldFileOnStartupAboveSize="0" lineEnding="CRLF" keepFileOpen="true" concurrentWrites="false" openFileCacheTimeout="30"/>
        <target name="ErrorTarget" xsi:type="File" fileName="${basedir}/Logs/${shortdate}/${lowercase:${level}}.txt" layout="${longdate} | ${uppercase:${level}} | ${threadname}[${threadid}] | ${logger} | ${message} >>> ${newline} ${onexception}:${exception:format=message} ${newline} ${stacktrace} ${newline}" archiveFileName="${basedir}/Logs/${shortdate}/${lowercase:${level}}.{#}.txt" archiveAboveSize="52428800" archiveNumbering="Sequence" archiveOldFileOnStartup="false" archiveOldFileOnStartupAboveSize="0" lineEnding="CRLF" keepFileOpen="true" concurrentWrites="false" openFileCacheTimeout="30"/>
        <!--使用可自定义的着色将日志消息写入控制台-->
        <target name="ConsoleTarget" xsi:type="ColoredConsole" layout="[${date:format=HH\:mm\:ss}]:${message} ${exception:format=message}" />
    </targets>

    <!--简化写法，利用 default-XXX 将配置提取统一设置-->
    <!--     
    <targets>
        <default-wrapper xsi:type="AsyncWrapper">
            <wrapper-target xsi:type="RetryingWrapper"/>
        </default-wrapper>
        <default-target-parameters xsi:type="File" archiveAboveSize="100" archiveNumbering="Sequence" archiveOldFileOnStartup="false" archiveOldFileOnStartupAboveSize="0" lineEnding="CRLF" keepFileOpen="true" concurrentWrites="false" openFileCacheTimeout="30"/>
        <target name="AsyncTraceTarget" xsi:type="File" fileName="${basedir}/Logs/${shortdate}/${lowercase:${level}}.txt" layout="${longdate} | ${uppercase:${level}} | ${threadname}[${threadid}] | ${logger} | ${message} ${newline}" archiveFileName="${basedir}/Logs/${shortdate}/${lowercase:${level}}.{##}.txt" maxArchiveFiles="10" />
        <target name="AsyncSystemTarget" xsi:type="File" fileName="${basedir}/Logs/${shortdate}/system.txt" layout="${longdate} | ${uppercase:${level}} | ${threadname}[${threadid}] | ${logger} | ${message} ${newline}" archiveFileName="${basedir}/Logs/${shortdate}/system.{#}.txt" maxArchiveFiles="7" archiveAboveSize="50"/>
    </targets>
     -->

    <!--规则配置,final - 最终规则匹配后不处理任何规则-->
    <rules>
        <logger name="Microsoft.AspNetCore.*" minlevel="Info" writeTo="WebApiTarget" final="true"/>
        <logger name="Microsoft.*" minlevel="Info" writeTo="AsyncSystemTarget" final="true"/>
        <logger name="System.*" minlevel="Info" writeTo="AsyncSystemTarget" final="true"/>
        <logger name="*" level="Trace" writeTo="AsyncTraceTarget" final="true">
            <!--过滤器设置-->
            <filters defaultAction="Log">
                <!-- <when condition="length('${message}') > 100" action="Ignore" />
                <when condition="equals('${logger}','MyApps.SomeClass')" action="Ignore" />
                <when condition="(level >= LogLevel.Debug and contains('${message}','PleaseDontLogThis'))" action="Ignore" />
                <when condition="not starts-with('${message}','PleaseLogThis')" action="Ignore" /> -->
                <when condition="starts-with('${logger}','Microsoft')" action="Ignore" />
            </filters>
        </logger>
        <logger name="*" minlevel="Error" writeTo="ErrorTarget" />
    </rules>

    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>
</nlog>